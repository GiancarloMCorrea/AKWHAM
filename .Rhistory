devtools::install_github('timjmiller/wham', ref='master')
setwd("~/GitHub/GOApollock/pkwham")
## This file tests whether the GOA pollock model can run in WHAM
library(dplyr)
library(tidyr)
library(GOApollock)
## devtools::install_github('timjmiller/wham', ref='master')
library(wham)
library(ggplot2)
theme_set(theme_bw())
library(purrr)
source("functions.R")
#mycols = RColorBrewer::brewer.pal(n = 9, name = 'Set1')
mycols = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
## Original ADMB model, final from 2021
arep <- read_pk_rep(path='2021_final', version='ADMB original', endyr=2021)
asdrep <- read_pk_cor(path='2021_final', version='ADMB original', endyr=2021)
## Get WHAM initial values setup to be close by using the output
## from ADMB
asap3 <- read_asap3_dat("goa_pk_asap3.txt")
input <- match_input(arep, asap3)
## map process variances off to start to match ADMB (penalized
## likelihood)
mapoff('sel_repars')                    # selex variance
mapoff('log_NAA_sigma')                 # recruit variance
mapoff('q_repars')                      # q variance
## Compare initial values to ADMB
fit0 <- fit_wham(input, do.osa=FALSE, do.fit=FALSE, do.retro=FALSE,
do.sdrep=TRUE, MakeADFun.silent=TRUE)
save(fit0, file = 'fit0.RData')
fit0$rep[grep('nll',names(fit0$rep))] %>% lapply(sum) %>% unlist
plot_checks(arep, fit0$rep) # special plot function to explore inits
## Compare platforms after optimizing.
fit1 <- fit_wham(input, do.osa=FALSE, do.fit=TRUE, do.retro=FALSE)
fit1$rep[grep('nll',names(fit1$rep))] %>% lapply(sum) %>% unlist
## Compare initial values to ADMB
fit0 <- fit_wham(input, do.osa=FALSE, do.fit=FALSE, do.retro=FALSE,
do.sdrep=TRUE, MakeADFun.silent=TRUE)
fit0$rep[grep('nll',names(fit0$rep))] %>% lapply(sum) %>% unlist
setwd("~/GitHub/AKWHAM")
load('GOA_pcod/fit.RData')
fit$sdrep
fit$rep$Ecov_obs_sigma
fit$rep$Ecov_obs_sigma_par
setwd("~/GitHub/AKWHAM")
# Install WHAM package (growth branch):
# remotes::install_github(repo = 'gmoroncorrea/wham', ref='growth', INSTALL_opts = c("--no-docs", "--no-multiarch", "--no-demo"))
rm(list = ls())
require(dplyr)
require(ggplot2)
library(wham)
source('functions_pollock.R')
source('aux_fun.R')
# Load some files:
load('aux_data/input.RData') # input data as in original WHAM model (Cole's)
# see here: https://github.com/afsc-assessments/GOApollock/blob/dev/pkwham/pkwham_test.R
load('aux_data/cv_survey.RData') # CV for observed WAA (survey)
load('aux_data/asdrep.RData') # ADMB pollock model output
# see here: https://github.com/afsc-assessments/GOApollock/blob/dev/pkwham/pkwham_test.R
# Get SSB estimates from ADMB model
SSBdata0 = cbind(model = 'ADMB',
filter(asdrep, name=='log_ssb') %>% select(year, est, sd=se))
# Some model parameters:
mycols = c("#000000", "#E69F00", "#56B4E9", "#009E73")
LAA_jan1 = c(8.8, 21.1, 30.4, 37.4, 42.7, 46.8, 49.8, 52.1, 53.9, 55.2) # obtained from survey data
LW_pars = c(2.847e-06, 3.261) # obtained from survey data
GW_pars = c(0.28, 59.4, 8.8, 3, 7) # obtained from survey data
WAA_jan1 = round(LW_pars[1]*LAA_jan1^LW_pars[2], digits = 3)
# -------------------------------------------------------------------------
# Prepare input data for WHAM:
wham_data = list()
wham_data$ages = 1:input$data$n_ages
wham_data$lengths = seq(from = 2, to = 80, by = 2)
wham_data$years = as.integer(input$years)
wham_data$n_fleets = input$data$n_fleets
wham_data$agg_catch = input$data$agg_catch
wham_data$use_agg_catch = input$data$use_agg_catch
wham_data$catch_cv = input$data$agg_catch_sigma
# Age comps fleet:
wham_data$catch_paa = input$data$catch_paa
wham_data$catch_Neff = input$data$catch_Neff
wham_data$use_catch_paa = input$data$use_catch_paa
wham_data$selblock_pointer_fleets = input$data$selblock_pointer_fleets
wham_data$F = matrix(0.2, ncol = 1, nrow = input$data$n_years_catch)
wham_data$n_indices = input$data$n_indices
wham_data$agg_indices = input$data$agg_indices
# Age comps survey
wham_data$index_paa = input$data$index_paa
wham_data$index_Neff =  input$data$index_Neff
wham_data$use_index_paa = input$data$use_index_paa
wham_data$units_indices = input$data$units_indices
wham_data$use_indices = input$data$use_indices
wham_data$units_index_paa = input$data$units_index_paa
wham_data$selblock_pointer_indices = input$data$selblock_pointer_indices
wham_data$fracyr_indices = input$data$fracyr_indices
wham_data$waa = input$data$waa
wham_data$waa_pointer_indices = input$data$waa_pointer_indices
wham_data$waa_pointer_fleets = input$data$waa_pointer_fleets
wham_data$waa_pointer_totcatch = input$data$waa_pointer_totcatch
wham_data$waa_pointer_ssb = input$data$waa_pointer_ssb
wham_data$waa_pointer_jan1 = input$data$waa_pointer_jan1
wham_data$maturity = input$data$mature
wham_data$fracyr_SSB = input$data$fracyr_SSB
wham_data$Fbar_ages = input$data$Fbar_ages
wham_data$percentSPR = input$data$percentSPR
wham_data$percentFXSPR = 100
wham_data$percentFMSY = 100
wham_data$XSPR_R_avg_yrs = 1:length(input$years)
wham_data$XSPR_R_opt = input$data$XSPR_R_opt
wham_data$simulate_period = input$data$simulate_period
wham_data$bias_correct_process = input$data$bias_correct_pe
wham_data$bias_correct_observation = input$data$bias_correct_oe
input$data$XSPR_R_avg_yrs
# -------------------------------------------------------------------------
# Empirical WAA
input_a = prepare_wham_input(model_name="pollock_a",
selectivity=list(model = c('double-logistic', 'age-specific', 'double-logistic',
'double-logistic', 'age-specific', 'age-specific',
'double-logistic'),
re = c('iid', 'none', 'none', 'none', 'none', 'none', 'none'),
initial_pars=list(c(4, 1, 20, 0.36), rep(1, 10),
c(4, 1, 20, 0.36),
c(4, 1, 20, 0.36), rep(1, 10), rep(1, 10),
c(4, 1, 20, 0.36)),
fix_pars = list(NULL, 1:2, 3:4, 3:4, 1:10, 1:10, 1:4),
n_selblocks = 7),
M = list(model = 'age-specific', re = 'none',
initial_means = exp(input$par$M_a)),
NAA_re = list(sigma="rec", cor = 'iid', N1_model = 1,
recruit_model = 2,
N1_pars = exp(input$par$log_N1_pars),
recruit_pars = exp(input$par$mean_rec_pars)),
growth = list(model = 'vB_classic',
re = c('none', 'none', 'none', 'none', 'none'),
init_vals = GW_pars),
catchability = list(re = c('ar1', 'none', 'ar1', 'none', 'none', 'none'),
initial_q = rep(1, 6), q_lower = rep(0, 6),
q_upper = rep(1000, 6), prior_sd = rep(NA, 6)),
basic_info = wham_data)
setwd("~/GitHub/AKWHAM")
# Install WHAM package (growth branch):
# remotes::install_github(repo = 'gmoroncorrea/wham', ref='growth', INSTALL_opts = c("--no-docs", "--no-multiarch", "--no-demo"))
rm(list = ls())
require(dplyr)
require(ggplot2)
library(wham)
source('functions_pollock.R')
source('aux_fun.R')
# Load some files:
load('aux_data/input.RData') # input data as in original WHAM model (Cole's)
# see here: https://github.com/afsc-assessments/GOApollock/blob/dev/pkwham/pkwham_test.R
load('aux_data/cv_survey.RData') # CV for observed WAA (survey)
load('aux_data/asdrep.RData') # ADMB pollock model output
# see here: https://github.com/afsc-assessments/GOApollock/blob/dev/pkwham/pkwham_test.R
# Get SSB estimates from ADMB model
SSBdata0 = cbind(model = 'ADMB',
filter(asdrep, name=='log_ssb') %>% select(year, est, sd=se))
# Some model parameters:
mycols = c("#000000", "#E69F00", "#56B4E9", "#009E73")
LAA_jan1 = c(8.8, 21.1, 30.4, 37.4, 42.7, 46.8, 49.8, 52.1, 53.9, 55.2) # obtained from survey data
LW_pars = c(2.847e-06, 3.261) # obtained from survey data
GW_pars = c(0.28, 59.4, 8.8, 3, 7) # obtained from survey data
WAA_jan1 = round(LW_pars[1]*LAA_jan1^LW_pars[2], digits = 3)
# -------------------------------------------------------------------------
# Prepare input data for WHAM:
wham_data = list()
wham_data$ages = 1:input$data$n_ages
wham_data$lengths = seq(from = 2, to = 80, by = 2)
wham_data$years = as.integer(input$years)
wham_data$n_fleets = input$data$n_fleets
wham_data$agg_catch = input$data$agg_catch
wham_data$use_agg_catch = input$data$use_agg_catch
wham_data$catch_cv = input$data$agg_catch_sigma
# Age comps fleet:
wham_data$catch_paa = input$data$catch_paa
wham_data$catch_Neff = input$data$catch_Neff
wham_data$use_catch_paa = input$data$use_catch_paa
wham_data$selblock_pointer_fleets = input$data$selblock_pointer_fleets
wham_data$F = matrix(0.2, ncol = 1, nrow = input$data$n_years_catch)
wham_data$n_indices = input$data$n_indices
wham_data$agg_indices = input$data$agg_indices
# Age comps survey
wham_data$index_paa = input$data$index_paa
wham_data$index_Neff =  input$data$index_Neff
wham_data$use_index_paa = input$data$use_index_paa
wham_data$units_indices = input$data$units_indices
wham_data$use_indices = input$data$use_indices
wham_data$units_index_paa = input$data$units_index_paa
wham_data$selblock_pointer_indices = input$data$selblock_pointer_indices
wham_data$fracyr_indices = input$data$fracyr_indices
wham_data$waa = input$data$waa
wham_data$waa_pointer_indices = input$data$waa_pointer_indices
wham_data$waa_pointer_fleets = input$data$waa_pointer_fleets
wham_data$waa_pointer_totcatch = input$data$waa_pointer_totcatch
wham_data$waa_pointer_ssb = input$data$waa_pointer_ssb
wham_data$waa_pointer_jan1 = input$data$waa_pointer_jan1
wham_data$maturity = input$data$mature
wham_data$fracyr_SSB = input$data$fracyr_SSB
wham_data$Fbar_ages = input$data$Fbar_ages
wham_data$percentSPR = input$data$percentSPR
wham_data$percentFXSPR = 100
wham_data$percentFMSY = 100
wham_data$XSPR_R_avg_yrs = 1:length(input$years)
wham_data$XSPR_R_opt = input$data$XSPR_R_opt
wham_data$simulate_period = input$data$simulate_period
wham_data$bias_correct_process = input$data$bias_correct_pe
wham_data$bias_correct_observation = input$data$bias_correct_oe
# -------------------------------------------------------------------------
# Empirical WAA
input_a = prepare_wham_input(model_name="pollock_a",
selectivity=list(model = c('double-logistic', 'age-specific', 'double-logistic',
'double-logistic', 'age-specific', 'age-specific',
'double-logistic'),
re = c('iid', 'none', 'none', 'none', 'none', 'none', 'none'),
initial_pars=list(c(4, 1, 20, 0.36), rep(1, 10),
c(4, 1, 20, 0.36),
c(4, 1, 20, 0.36), rep(1, 10), rep(1, 10),
c(4, 1, 20, 0.36)),
fix_pars = list(NULL, 1:2, 3:4, 3:4, 1:10, 1:10, 1:4),
n_selblocks = 7),
M = list(model = 'age-specific', re = 'none',
initial_means = exp(input$par$M_a)),
NAA_re = list(sigma="rec", cor = 'iid', N1_model = 1,
recruit_model = 2,
N1_pars = exp(input$par$log_N1_pars),
recruit_pars = exp(input$par$mean_rec_pars)),
growth = list(model = 'vB_classic',
re = c('none', 'none', 'none', 'none', 'none'),
init_vals = GW_pars),
catchability = list(re = c('ar1', 'none', 'ar1', 'none', 'none', 'none'),
initial_q = rep(1, 6), q_lower = rep(0, 6),
q_upper = rep(1000, 6), prior_sd = rep(NA, 6)),
basic_info = wham_data)
# Install WHAM package (growth branch):
# remotes::install_github(repo = 'gmoroncorrea/wham', ref='growth', INSTALL_opts = c("--no-docs", "--no-multiarch", "--no-demo"))
rm(list = ls())
require(dplyr)
require(ggplot2)
library(wham)
source('functions_pollock.R')
source('aux_fun.R')
# Load some files:
load('aux_data/input.RData') # input data as in original WHAM model (Cole's)
# see here: https://github.com/afsc-assessments/GOApollock/blob/dev/pkwham/pkwham_test.R
load('aux_data/cv_survey.RData') # CV for observed WAA (survey)
load('aux_data/asdrep.RData') # ADMB pollock model output
# see here: https://github.com/afsc-assessments/GOApollock/blob/dev/pkwham/pkwham_test.R
# Get SSB estimates from ADMB model
SSBdata0 = cbind(model = 'ADMB',
filter(asdrep, name=='log_ssb') %>% select(year, est, sd=se))
# Some model parameters:
mycols = c("#000000", "#E69F00", "#56B4E9", "#009E73")
LAA_jan1 = c(8.8, 21.1, 30.4, 37.4, 42.7, 46.8, 49.8, 52.1, 53.9, 55.2) # obtained from survey data
LW_pars = c(2.847e-06, 3.261) # obtained from survey data
GW_pars = c(0.28, 59.4, 8.8, 3, 7) # obtained from survey data
WAA_jan1 = round(LW_pars[1]*LAA_jan1^LW_pars[2], digits = 3)
# -------------------------------------------------------------------------
# Prepare input data for WHAM:
wham_data = list()
wham_data$ages = 1:input$data$n_ages
wham_data$lengths = seq(from = 2, to = 80, by = 2)
wham_data$years = as.integer(input$years)
wham_data$n_fleets = input$data$n_fleets
wham_data$agg_catch = input$data$agg_catch
wham_data$use_agg_catch = input$data$use_agg_catch
wham_data$catch_cv = input$data$agg_catch_sigma
# Age comps fleet:
wham_data$catch_paa = input$data$catch_paa
wham_data$catch_Neff = input$data$catch_Neff
wham_data$use_catch_paa = input$data$use_catch_paa
wham_data$selblock_pointer_fleets = input$data$selblock_pointer_fleets
wham_data$F = matrix(0.2, ncol = 1, nrow = input$data$n_years_catch)
wham_data$n_indices = input$data$n_indices
wham_data$agg_indices = input$data$agg_indices
# Age comps survey
wham_data$index_paa = input$data$index_paa
wham_data$index_Neff =  input$data$index_Neff
wham_data$use_index_paa = input$data$use_index_paa
wham_data$units_indices = input$data$units_indices
wham_data$use_indices = input$data$use_indices
wham_data$units_index_paa = input$data$units_index_paa
wham_data$selblock_pointer_indices = input$data$selblock_pointer_indices
wham_data$fracyr_indices = input$data$fracyr_indices
wham_data$waa = input$data$waa
wham_data$waa_pointer_indices = input$data$waa_pointer_indices
wham_data$waa_pointer_fleets = input$data$waa_pointer_fleets
wham_data$waa_pointer_totcatch = input$data$waa_pointer_totcatch
wham_data$waa_pointer_ssb = input$data$waa_pointer_ssb
wham_data$waa_pointer_jan1 = input$data$waa_pointer_jan1
wham_data$maturity = input$data$mature
wham_data$fracyr_SSB = input$data$fracyr_SSB
wham_data$Fbar_ages = input$data$Fbar_ages
wham_data$percentSPR = input$data$percentSPR
wham_data$percentFXSPR = 100
wham_data$percentFMSY = 100
wham_data$XSPR_R_avg_yrs = 1:length(input$years)
wham_data$XSPR_R_opt = input$data$XSPR_R_opt
wham_data$simulate_period = input$data$simulate_period
wham_data$bias_correct_process = input$data$bias_correct_pe
wham_data$bias_correct_observation = input$data$bias_correct_oe
